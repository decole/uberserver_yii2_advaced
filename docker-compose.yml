version: '3.2'

services:

  frontend:
    build: frontend
    restart: always
    ports:
      - 20080:80
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app

  backend:
    build: backend
    restart: always
    ports:
      - 21080:80
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app

  mysql:
    image: mysql:5.7
    restart: always
    ports:
      - "3306:3306"
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=verysecret
      - MYSQL_DATABASE=yii2advanced
      - MYSQL_USER=yii2advanced
      - MYSQL_PASSWORD=secret

  #pgsql:
  #  image: postgres:9.5
  #  environment:
  #    - POSTGRES_DB=yii2advanced
  #    - POSTGRES_USER=yii2advanced
  #    - POSTGRES_PASSWORD=secret

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.0
    links:
      - mysql:db
    ports:
      - 8080:80
    environment:
      - MYSQL_ROOT_PASSWORD=verysecret
    depends_on:
      - mysql

  redis:
    image: redis:5.0-alpine
    restart: always
    ports:
      - "6379:6379"
#    env_file:
#      - common.env
    volumes:
      - .data/redisData:/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis-admin:
    image: erikdubbelboer/phpredisadmin
    restart: always
    depends_on:
      - redis
    ports:
      - "8083:80"
    environment:
      - REDIS_1_HOST=redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"